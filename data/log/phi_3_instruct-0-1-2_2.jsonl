{"task_id": "HumanEval/0", "completion": "    \"\"\" Check if in given list of numbers, are any two numbers closer to each other than\n    given threshold.\n    \"\"\"\n    for i in range(len(numbers)):\n        for j in range(i+1, len(numbers)):\n            if abs(numbers[i] - numbers[j]) < threshold:\n                return True\n    return False"}
{"task_id": "HumanEval/1", "completion": "    import re\n    # Remove all spaces from the input string\n    paren_string = paren_string.replace(\" \", \"\")\n\n    # Use regular expression to find all balanced parentheses groups\n    matches = re.findall(r'\\(([^()]+)\\)', paren_string)\n\n    # Return the list of matched groups\n    return matches"}
{"task_id": "HumanEval/2", "completion": "    \"\"\" Given a positive floating point number, it can be decomposed into\n    and integer part (largest integer smaller than given number) and decimals\n    (leftover part always smaller than 1).\n\n    Return the decimal part of the number.\n    >>> truncate_number(3.5)\n    0.5\n    \"\"\"\n\n    # Extract the integer part and the decimal part\n    integer_part = int(number)\n    decimal_part = number - integer_part\n\n    return decimal_part"}
