{"task_id": "HumanEval/108", "completion": "    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count = 0\n    for num in arr:\n        if num >= 0:\n            digit_sum = sum(int(digit) for digit in str(num))\n            if digit_sum > 0:\n                count += 1\n        else:\n            num = -num\n            digit_sum = sum(int(digit) for digit in str(num))\n            if digit_sum > 0:\n                count += 1\n    return count"}
{"task_id": "HumanEval/109", "completion": "    \"\"\"\n    Check if it's possible to sort the array in non-decreasing order by performing right shift operations.\n    \"\"\"\n    # If the array is empty, return True\n    if not arr:\n        return True\n\n    # Sort the array\n    arr.sort()\n\n    # Check if the sorted array is equal to the original array\n    return arr == sorted(arr)"}
{"task_id": "HumanEval/110", "completion": "    \"\"\"\n    This function checks if it's possible to make all elements in lst1 even by exchanging elements between lst1 and lst2.\n    \"\"\"\n    # Check if all elements in lst1 are already even\n    for num in lst1:\n        if num % 2 != 0:\n            return \"NO\"\n\n    # If all elements in lst1 are even, we don't need to exchange any elements\n    return \"YES\""}
