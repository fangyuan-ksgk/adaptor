{"task_id": "HumanEval/15", "completion": "    \"\"\" Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n    >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \"\"\"\n    return ' '.join(str(i) for i in range(n+1))"}
{"task_id": "HumanEval/16", "completion": "    \"\"\" Given a string, find out how many distinct characters (regardless of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\n\n    # Convert the string to lowercase to ensure case-insensitivity\n    string = string.lower()\n\n    # Use a set to store distinct characters\n    distinct_chars = set()\n\n    # Iterate over each character in the string\n    for char in string:\n        # Add the character to the set if it's not already present\n        distinct_chars.add(char)\n\n    # The size of the set represents the number of distinct characters\n    return len(distinct_chars)"}
{"task_id": "HumanEval/17", "completion": "    \"\"\" \n    This function takes a string of musical notes and returns a list of integers representing the duration of each note.\n    \"\"\"\n\n    # Initialize an empty list to store the durations\n    durations = []\n\n    # Split the input string into individual notes\n    notes = music_string.split()\n\n    # Iterate over each note\n    for note in notes:\n        # Check the type of the note and calculate its duration\n        if note == 'o':\n            durations.append(4)\n        elif note == 'o|':\n            durations.append(2)\n        elif note == '.|':\n            durations.append(1)\n\n    # Return the list of durations\n    return durations"}
