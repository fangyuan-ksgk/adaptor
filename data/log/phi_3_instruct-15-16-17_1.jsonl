{"task_id": "HumanEval/15", "completion": "    \"\"\" Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n    >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \"\"\"\n    return ' '.join(str(i) for i in range(n+1))"}
{"task_id": "HumanEval/16", "completion": "    \"\"\" Given a string, find out how many distinct characters (regardless of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\n    # Convert the string to lowercase to ensure case-insensitivity\n    string = string.lower()\n\n    # Create an empty set to store unique characters\n    unique_chars = set()\n\n    # Iterate over each character in the string\n    for char in string:\n        # Add each character to the set (which automatically removes duplicates)\n        unique_chars.add(char)\n\n    # The size of the set is the count of distinct characters\n    return len(unique_chars)"}
{"task_id": "HumanEval/17", "completion": "    \"\"\"\n    This function takes a string of musical notes and returns a list of integers representing the duration of each note.\n    \"\"\"\n    note_dict = {'o': 4, 'o|': 2, '.|': 1}\n    notes = music_string.split()\n    result = []\n    for note in notes:\n        result.append(note_dict[note])\n    return result"}
