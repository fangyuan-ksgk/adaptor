{"task_id": "HumanEval/152", "completion": "    \"\"\"\n    Calculate the absolute difference between the scores and guesses.\n    \"\"\"\n    result = []\n    for score, guess in zip(scores, guesses):\n        result.append(abs(score - guess))\n    return result"}
{"task_id": "HumanEval/153", "completion": "    \"\"\"\n    You will be given the name of a class (a string) and a list of extensions.\n    The extensions are to be used to load additional classes to the class. The\n    strength of the extension is as follows: Let CAP be the number of the uppercase\n    letters in the extension's name, and let SM be the number of lowercase letters \n    in the extension's name, the strength is given by the fraction CAP - SM. \n    You should find the strongest extension and return a string in this \n    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions with the same strength, you should\n    choose the one that comes first in the list.\n    \"\"\"\n\n    max_strength = -1\n    strongest_extension = \"\"\n\n    for extension in extensions:\n        CAP = sum(1 for char in extension if char.isupper())\n        SM = sum(1 for char in extension if char.islower())\n        strength = CAP - SM\n\n        if strength > max_strength or (strength == max_strength and extensions.index(extension) < extensions.index(strongest_extension)):\n            max_strength = strength\n            strongest_extension = extension\n\n    return f\"{class_name}.{strongest_extension}\""}
