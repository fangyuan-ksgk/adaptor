{"task_id": "HumanEval/30", "completion": "    \"\"\"Return only positive numbers in the list.\n    >>> get_positive([-1, 2, -4, 5, 6])\n    [2, 5, 6]\n    >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 2, 3, 9, 123, 1]\n    \"\"\"\n    return [num for num in l if num > 0]"}
{"task_id": "HumanEval/31", "completion": "    \"\"\"Return true if a given number is prime, and false otherwise.\n    >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\n    if n <= 1:\n        return False\n    elif n <= 3:\n        return True\n    elif n % 2 == 0 or n % 3 == 0:\n        return False\n    i = 5\n    while i * i <= n:\n        if n % i == 0 or n % (i + 2) == 0:\n            return False\n        i += 6\n    return True"}
{"task_id": "HumanEval/32", "completion": "    \"\"\"\n    Evaluates polynomial with coefficients xs at point x.\n    return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])\n    \"\"\"\n    return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])\n\n\ndef find_zero(xs: list):\n    \"\"\"\n    Finds the root of the polynomial represented by the coefficients in xs.\n    The function uses the Newton-Raphson method for finding the roots.\n    \"\"\"\n    def newton_raphson(f, df, x0, epsilon=1e-7):\n        while abs(f(x0)) > epsilon:\n            x0 = x0 - f(x0) / df(x0)\n        return x0\n\n    def derivative(f, x):\n        h = 1e-4\n        return (f(x + h) - f(x - h)) / (2 * h)\n\n    def f(x):\n        return poly(xs, x)\n\n    def df(x):\n        return derivative(f, x)\n\n    return newton_raphson(f, df, 0)"}
