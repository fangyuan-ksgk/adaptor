{"task_id": "HumanEval/36", "completion": "    count = 0\n    for i in range(n):\n        num = i\n        while num > 0:\n            digit = num % 10\n            if digit == 7:\n                count += 1\n            num = num // 10\n    return count"}
{"task_id": "HumanEval/37", "completion": "    \"\"\"This function takes a list l and returns a list l' such that\n    l' is identical to l in the odd indicies, while its values at the even indicies are equal\n    to the values of the even indicies of l, but sorted.\n    \"\"\"\n    even_indices = [i for i in range(len(l)) if i % 2 == 0]\n    even_values = [l[i] for i in even_indices]\n    even_values.sort()\n    for i in range(len(even_indices)):\n        l[even_indices[i]] = even_values[i]\n    return l"}
{"task_id": "HumanEval/38", "completion": "    \"\"\"\n    takes as input string encoded with encode_cyclic function. Returns decoded string.\n    \"\"\"\n    # split string to groups. Each of length 3.\n    groups = [s[i:i+3] for i in range(0, len(s), 3)]\n    # reverse the cyclic rotation for each group.\n    groups = [(group[1:] + group[0]) if len(group) == 3 else group for group in groups]\n    # join the groups back into a single string.\n    return \"\".join(groups)"}
