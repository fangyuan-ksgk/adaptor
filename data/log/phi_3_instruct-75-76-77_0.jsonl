{"task_id": "HumanEval/75", "completion": "    \"\"\"\n    This function checks if the given number 'a' is the multiplication of 3 prime numbers.\n    \"\"\"\n    def is_prime(n):\n        \"\"\"Check if a number is prime.\"\"\"\n        if n < 2:\n            return False\n        for i in range(2, int(n**0.5) + 1):\n            if n % i == 0:\n                return False\n        return True\n\n    # Check if 'a' is divisible by 3 prime numbers\n    for i in range(2, int(a**0.5) + 1):\n        if a % i == 0:\n            if is_prime(i):\n                a //= i\n                if a == 1:\n                    return True\n    return False"}
{"task_id": "HumanEval/76", "completion": "    \"\"\"\n    This function checks if a number x is a simple power of n.\n    A number x is a simple power of n if n raised to the power of an integer equals x.\n    \"\"\"\n    # First, we check if x is a positive integer. If not, we return False.\n    if not isinstance(x, int) or x < 1:\n        return False\n\n    # Next, we check if n is a positive integer. If not, we return False.\n    if not isinstance(n, int) or n < 1:\n        return False\n\n    # Now, we calculate n raised to the power of an integer.\n    # We use the built-in function pow() for this.\n    power = pow(n, int(x ** (1.0/n))) )\n\n    # Finally, we check if the calculated power equals x. If it does, we return True. Otherwise, we return False.\n    return power == x"}
{"task_id": "HumanEval/77", "completion": "    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    # Calculate the cube root of the number\n    root = round(a**(1./3.))\n\n    # Check if the cube of the root is equal to the original number\n    return root**3 == a"}
