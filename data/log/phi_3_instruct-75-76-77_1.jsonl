{"task_id": "HumanEval/75", "completion": "    \"\"\"\n    This function checks if the given number 'a' is the multiplication of 3 prime numbers.\n    \"\"\"\n    def is_prime(n):\n        \"\"\"Check if a number is prime.\"\"\"\n        if n < 2:\n            return False\n        for i in range(2, int(n**0.5) + 1):\n            if n % i == 0:\n                return False\n        return True\n\n    # Check if 'a' is divisible by 3 prime numbers\n    for i in range(2, int(a**0.5) + 1):\n        if a % i == 0:\n            # Check if 'i' is a prime number\n            if is_prime(i):\n                # Check if the quotient is also a prime number\n                quotient = a // i\n                if is_prime(quotient):\n                    # Check if the product of 'i' and 'quotient' equals 'a'\n                    if i * quotient == a:\n                        return True\n    return False"}
{"task_id": "HumanEval/76", "completion": "    \"\"\"\n    Checks if a number x is a simple power of n.\n    \"\"\"\n    # Calculate the power of n\n    power = n ** int(x ** (1.0 / n))\n\n    # Check if the calculated power is equal to x\n    if power == x:\n        return True\n    else:\n        return False"}
{"task_id": "HumanEval/77", "completion": "    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n\n    # Calculate the cube root of the input number\n    cube_root = a ** (1. / 3.)\n\n    # Check if the cube root is an integer\n    return cube_root.is_integer()"}
