{"task_id": "HumanEval/78", "completion": "    \"\"\"\n    This function takes a hexadecimal number as a string and counts the number of hexadecimal digits that are prime numbers.\n    \"\"\"\n\n    # Define the prime numbers in the hexadecimal system\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n\n    # Convert the hexadecimal number to a list of digits\n    digits = list(num)\n\n    # Initialize a counter for the prime digits\n    prime_count = 0\n\n    # Iterate over the digits\n    for digit in digits:\n        # Convert the digit to its decimal equivalent\n        decimal_digit = int(digit, 16)\n\n        # Check if the decimal digit is a prime number\n        if decimal_digit in primes:\n            prime_count += 1\n\n    return prime_count"}
{"task_id": "HumanEval/79", "completion": "    \"\"\"\n    This function converts a decimal number to binary format.\n    \"\"\"\n    # Convert the decimal number to binary\n    binary = bin(decimal).replace(\"0b\", \"\")\n\n    # Add 'db' at the beginning and end of the binary string\n    binary = 'db' + binary + 'db'\n\n    return binary"}
{"task_id": "HumanEval/80", "completion": "    \"\"\"You are given a string s.\n    Your task is to check if the string is happy or not.\n    A string is happy if its length is at least 3 and every 3 consecutive letters are distinct.\n    For example:\n    is_happy(a) => False\n    is_happy(aa) => False\n    is_happy(abcd) => True\n    is_happy(aabb) => False\n    is_happy(adb) => True\n    is_happy(xyy) => False\n    \"\"\"\n    if len(s) < 3:\n        return False\n\n    for i in range(len(s) - 2):\n        if s[i] == s[i+1] or s[i] == s[i+2]:\n            return False\n\n    return True"}
