{"task_id": "HumanEval/87", "completion": "    \"\"\"\n    Finds the coordinates of the integer x in the list.\n    Returns a list of tuples, where each tuple represents a coordinate.\n    The coordinates are sorted first by row in ascending order, and then by column in descending order.\n    \"\"\"\n\n    result = []\n\n    for i, row in enumerate(lst):\n        for j, val in enumerate(row):\n            if val == x:\n                result.append((i, len(row) - j - 1))\n\n    result.sort(key=lambda x: (x[0], -x[1]))\n\n    return result"}
{"task_id": "HumanEval/88", "completion": "    # Calculate the sum of the first and last element\n    sum_first_last = array[0] + array[-1]\n\n    # Determine the sorting order based on the sum\n    if sum_first_last % 2 == 0:\n        # If the sum is even, sort in descending order\n        array.sort(reverse=True)\n    else:\n        # If the sum is odd, sort in ascending order\n        array.sort()\n\n    return array"}
{"task_id": "HumanEval/89", "completion": "    \"\"\"Create a function encrypt that takes a string as an argument and\n    returns a string encrypted with the alphabet being rotated. \n    The alphabet should be rotated in a manner such that the letters \n    shift down by two multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n    encrypt('et') returns 'ix'\n    \"\"\"\n    result = ''\n    for char in s:\n        if char.isalpha():\n            ascii_offset = 97 if char.islower() else 65\n            result += chr((ord(char) - ascii_offset + 2*2) % 26 + ascii_offset)\n        else:\n            result += char\n    return result"}
